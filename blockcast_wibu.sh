#!/bin/bash

REPO="beacon-docker-compose"
REPO_URL="https://github.com/wibucrypto2201/beacon-docker-compose.git"

# L·∫•y th∆∞ m·ª•c ch·ª©a script ƒë·ªÉ ƒë·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n proxy.txt v√† repo ch√≠nh x√°c
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# 1Ô∏è‚É£ Ki·ªÉm tra proxy.txt t·ªìn t·∫°i
if [ ! -f "${SCRIPT_DIR}/proxy.txt" ]; then
    echo "‚ùå Error: proxy.txt kh√¥ng t√¨m th·∫•y! Vui l√≤ng ƒë·∫∑t file proxy.txt c√πng th∆∞ m·ª•c v·ªõi blockcast_wibu.sh"
    exit 1
fi

# 2Ô∏è‚É£ X√≥a repo c≈© n·∫øu ƒë√£ t·ªìn t·∫°i
if [ -d "${SCRIPT_DIR}/${REPO}" ]; then
    echo "‚ö†Ô∏è  Repo ${REPO} ƒë√£ t·ªìn t·∫°i ‚Äî ƒëang x√≥a ƒë·ªÉ clone l·∫°i..."
    rm -rf "${SCRIPT_DIR:?}/${REPO}"
fi

# 3Ô∏è‚É£ Clone repo m·ªõi
git clone "$REPO_URL" "${SCRIPT_DIR}/${REPO}"

cd "${SCRIPT_DIR}/${REPO}" || exit 1

# 4Ô∏è‚É£ Pull latest images
docker compose pull

# 5Ô∏è‚É£ Start containers theo proxy.txt
instance_id=1
while IFS= read -r proxy_line || [[ -n "$proxy_line" ]]; do
    host_port=$((8080 + instance_id))
    project_name="blockcast_${instance_id}"
    echo "üü¢ Starting container_${instance_id} with proxy: ${proxy_line} on port ${host_port} (Project: ${project_name})"

    INSTANCE_ID=$instance_id \
    PROXY_AUTH=$proxy_line \
    HOST_PORT=$host_port \
    docker compose -p "${project_name}" up -d

    ((instance_id++))
done < "${SCRIPT_DIR}/proxy.txt"

echo "‚úÖ T·∫•t c·∫£ container ƒë√£ ƒë∆∞·ª£c kh·ªüi ch·∫°y th√†nh c√¥ng!"
